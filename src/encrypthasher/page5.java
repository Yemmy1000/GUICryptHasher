/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encrypthasher;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.management.ManagementFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.math.BigInteger;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;




public class page5 extends javax.swing.JFrame {

    public String myKey = "";
    public String fileText = null;
    
    
    public page5() {
        initComponents();
//        setExtendedState(MAXIMIZED_BOTH);
//        encKey.setText("");
        jtpPlainText.setText("");
        System.out.println("====================== MD5 Hashing ===================");        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jtpMD5CypherText3 = new javax.swing.JTextArea();
        jBMD5 = new javax.swing.JButton();
        btnFilePicker = new javax.swing.JButton();
        filePath = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtpPlainText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jBtClearMD5 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtpMD5HashedValue = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtpMD5HashedValue1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        fileChooser.setDialogTitle("Plaintext File Chooser Dialog");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("MD5 HASHING FUNCTION");

        jtpMD5CypherText3.setEditable(false);
        jtpMD5CypherText3.setColumns(20);
        jtpMD5CypherText3.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jtpMD5CypherText3.setForeground(new java.awt.Color(0, 102, 51));
        jtpMD5CypherText3.setLineWrap(true);
        jtpMD5CypherText3.setRows(5);
        jScrollPane9.setViewportView(jtpMD5CypherText3);

        jBMD5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBMD5.setText("Hash");
        jBMD5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMD5ActionPerformed(evt);
            }
        });

        btnFilePicker.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFilePicker.setText("Get File");
        btnFilePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilePickerActionPerformed(evt);
            }
        });

        filePath.setBackground(new java.awt.Color(255, 255, 255));
        filePath.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        filePath.setText("No file selected");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Input File: ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("OR");

        jtpPlainText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Type String: ");

        jBtClearMD5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBtClearMD5.setText("Reset");
        jBtClearMD5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtClearMD5ActionPerformed(evt);
            }
        });

        jtpMD5HashedValue.setEditable(false);
        jtpMD5HashedValue.setColumns(20);
        jtpMD5HashedValue.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jtpMD5HashedValue.setForeground(new java.awt.Color(0, 102, 51));
        jtpMD5HashedValue.setLineWrap(true);
        jtpMD5HashedValue.setRows(5);
        jScrollPane5.setViewportView(jtpMD5HashedValue);

        jtpMD5HashedValue1.setEditable(false);
        jtpMD5HashedValue1.setColumns(20);
        jtpMD5HashedValue1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jtpMD5HashedValue1.setForeground(new java.awt.Color(0, 102, 51));
        jtpMD5HashedValue1.setLineWrap(true);
        jtpMD5HashedValue1.setRows(5);
        jScrollPane6.setViewportView(jtpMD5HashedValue1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Hashed Value:");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(68, 68, 68))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(126, 126, 126)
                                        .addComponent(filePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(90, 90, 90))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(344, 344, 344)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFilePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtClearMD5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBMD5, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtpPlainText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFilePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jBtClearMD5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtpPlainText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(13, 13, 13)
                .addComponent(jBMD5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel4)))
                .addGap(56, 56, 56)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBMD5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMD5ActionPerformed
        // TODO add your handling code here:
//        long startTime = System.nanoTime();
            String plainText = jtpPlainText.getText();
            if(fileText != null ){
                mdHash(fileText);
            }else if(!plainText.isEmpty()){
                mdHash(plainText);
            }else{
                JOptionPane optionPane = new JOptionPane("Both File and Textbox cannot be empty!",JOptionPane.ERROR_MESSAGE);
                JDialog dialog = optionPane.createDialog("Error!");
                dialog.setAlwaysOnTop(true); // to show top of all other application
                dialog.setVisible(true); // to visible the dialog
                jtpPlainText.grabFocus();            
            }

    }//GEN-LAST:event_jBMD5ActionPerformed

    
    public void mdHash(String plain_text){    
        resourcesUsage cpuusage = new resourcesUsage();
        Runtime runtime;
        byte[] bytes;
//        String cypher_text = "";
        jtpMD5HashedValue.setText("");
        //        String hashtext;
        try {
            
            long start = System.nanoTime();
           // log(start);
           //number of available processors;
            int cpuCount = ManagementFactory.getOperatingSystemMXBean().getAvailableProcessors();
            //
            long startCPUTime = ManagementFactory.getThreadMXBean().getCurrentThreadCpuTime();
           long startTime = System.nanoTime();  

           cpuusage.log("\n***CPU USAGE DETAILS**** \n");
           cpuusage.log("Starting Test with " + cpuCount);

            // Static getInstance method is called with hashing MD5
            MessageDigest md = MessageDigest.getInstance("MD5");

            // digest() method is called to calculate message digest
            //  of an input digest() return array of byte
            byte[] messageDigest = md.digest(plain_text.getBytes());

            // Convert byte array into signum representation
            BigInteger no = new BigInteger(1, messageDigest);

            // Convert message digest into hex value
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }

            jtpMD5HashedValue.setText(hashtext);
            
            System.out.println("\n**MEMORY DETAILS  ** \n");
            // Print initial memory usage.
            runtime = Runtime.getRuntime();
            cpuusage.printUsage(runtime);
            float cpuPercent = cpuusage.calcCPU(startCPUTime, startTime, cpuCount);
            cpuusage.log("CPU USAGE : " + cpuPercent + " % ");                    
            long endTime = System.nanoTime();                  
            System.out.println("MD5 Hashing execution time: " + (endTime - startTime) + " nanosecond"); 

        }

        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
        
    }
    private void btnFilePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilePickerActionPerformed

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File file = fileChooser.getSelectedFile();
            try {
                filePath.setText(file.getAbsolutePath());
                FileReader file2 = new FileReader(file.getAbsolutePath());
                BufferedReader reader = new BufferedReader(file2);
                String line = reader.readLine();

                while (line != null) {
                    fileText += line;
                    line = reader.readLine();
                }
                //                    System.out.println(fileText); // so key works
            } catch (IOException ex) {
                filePath.setText("File error! Select another file.");
            }
        } else {
            filePath.setText("File cancelled by user.");
        }
        //        fileTextLength.setText(fileText.length()+"");
    }//GEN-LAST:event_btnFilePickerActionPerformed

    private void jBtClearMD5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtClearMD5ActionPerformed
        jtpMD5HashedValue.setText("");
//        jtxtHashTimeMD5.setText("0");
//        jtxtEncTimeMD5.setText("0");
//        jtxtDecTimeMD5.setText("0");
//        encKey.setText("");
        fileText = null;
        filePath.setText("No filr selected");
        jtpPlainText.setText("");
//        jtpMD5PlainText.setText("");
//        jtpMD5CypherText2.setText("");

    }//GEN-LAST:event_jBtClearMD5ActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new page4().setVisible(true); 
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(page5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(page5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(page5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(page5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new page5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilePicker;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel filePath;
    private javax.swing.JButton jBMD5;
    private javax.swing.JButton jBtClearMD5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jtpMD5CypherText3;
    private javax.swing.JTextArea jtpMD5HashedValue;
    private javax.swing.JTextArea jtpMD5HashedValue1;
    private javax.swing.JTextField jtpPlainText;
    // End of variables declaration//GEN-END:variables
}
